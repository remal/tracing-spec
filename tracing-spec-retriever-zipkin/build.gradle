import name.remal.version.Version

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

apply plugin: 'java-library'
apply plugin: 'name.remal.classes-relocation'
apply plugin: 'maven-publish'

dependencies {
    relocateClasses project(':utils-okhttp')
    relocateClasses project(':utils-gson')

    annotationProcessing('org.immutables:gson') { exclude group: 'com.google.code.gson' }

    api project(':tracing-spec-retriever')
    api 'org.apache.logging.log4j:log4j-api'


    integrationImplementation 'io.zipkin.brave:brave'
    integrationImplementation 'io.zipkin.reporter2:zipkin-sender-urlconnection'
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

SourceSet versionTestSourceSet = sourceSets.integration
String baseVersionTestTaskName = versionTestSourceSet.getTaskName('test', null)

Task testSourceSetVersionsTask = tasks.create("${baseVersionTestTaskName}Versions") {
    group = 'verification'
    dependsOn(baseVersionTestTaskName)
    tasks.allTests.dependsOn(it)
}

tasks.create("testAllVersions") {
    dependsOn(testSourceSetVersionsTask)
}

SortedMap<Version, String> dockerTagImages = dockerImages.getZipkinVersionsToImage()

dockerTagImages.forEach { Version tagName, String imageName ->
    TaskProvider<Task> testVersionTask = tasks.register("$baseVersionTestTaskName-$tagName", Test) {
        dependsOn(versionTestSourceSet.classesTaskName)

        systemProperty('zipkin-image', imageName)
        systemProperty('zipkin-image-tag', tagName)

        Test baseTestTask = tasks[baseVersionTestTaskName]
        group = baseTestTask.group

        onlyIf {
            testClassesDirs = baseTestTask.testClassesDirs
            classpath = baseTestTask.classpath

            filter {
                includeTestsMatching('*VersionTest')
                failOnNoMatchingTests = true
            }

            return true
        }

        doFirst {
            String currentImage = systemProperties['zipkin-image']
            String currentTag = systemProperties['zipkin-image-tag']
            println "Testing with Docker image $currentImage:$currentTag"
        }
    }

    testSourceSetVersionsTask.dependsOn(testVersionTask)
}
