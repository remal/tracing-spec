name: build

on:
  push:
    branches:
    - master
    tags:
    - ver-*
  pull_request: { }

defaults:
  run:
    shell: bash

jobs:
  build:
    if: ${{
      (startsWith(github.ref, 'refs/tags/'))
      || (github.event_name == 'push' && !startsWith(github.event.head_commit.message, '[skip ci]') && !startsWith(github.event.head_commit.message, '[push-back]'))
      || github.event_name != 'push'
      }}
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4 -Dorg.gradle.warning.mode=all -Dsun.net.client.defaultConnectTimeout=15000 -Dsun.net.client.defaultReadTimeout=600000 -Dsun.io.useCanonCaches=false -Djava.awt.headless=true -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false

    steps:
    - name: Setup Java 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        lfs: true
        fetch-depth: 0

    - name: Adjust files to be built on CI
      run: |
        sed -i 's/-all\.zip/-bin.zip/' gradle/wrapper/gradle-wrapper.properties

    - name: Cache
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      uses: remal/always-cache@main
      with:
        key: ${{ runner.os }}-${{ github.ref }}
        restore-keys: |
          ${{ runner.os }}-${{ github.ref }}
          ${{ runner.os }}-refs/heads/master
        path: |
          ~/.gradle
          ~/.sonar/cache

    - name: Compile
      run: |
        chmod -R 0777 .
        ./gradlew allClasses
        echo "DISABLE_COMPILATION=true" >> "$GITHUB_ENV"

    - name: Build
      run: |
        ./gradlew build runAllTests -Dtest.versions-count=0

    - name: Analyze with SonarQube
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ./gradlew sonarqube -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.organization=remal


    - name: Run integration tests against different depedency versions
      env:
        RENOVATE_PR: ${{ github.event_name == 'pull_request' && github.event.pull_request.user.login == 'renovate[bot]' }}
        DEPENDABOT_PR: ${{ github.event_name == 'pull_request' && github.event.pull_request.user.login == 'dependabot[bot]' }}
      run: |
        testVersionsCount=
        if [ "$RENOVATE_PR" == "true" ] || [ "$DEPENDABOT_PR" == "true" ]; then
          testVersionsCount=2
        fi
        echo "test.versions-count=$testVersionsCount"
        ./gradlew testAllVersions -Dtest.versions-count=$testVersionsCount


    - name: Push back
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: |
        git config --unset-all http.https://github.com/.extraheader
        git remote set-url origin https://${{ secrets.PUSH_BACK_TOKEN }}@github.com/${{ github.repository }}
        git config user.name "${{ github.event.head_commit.committer.name }}"
        git config user.email "${{ github.event.head_commit.committer.email }}"

        echo "::group::IDEA settings"
        git add --all .idea
        if git commit --no-status -o -m "[push-back] Update IDEA settings" .idea ; then
          git push origin "HEAD:${{ github.ref }}"
        fi
        echo "::endgroup::"

        echo "::group::Documentation"
        git add --all README.md example-graph.png
        if git commit --no-status -o -m "[push-back] Update documentation" README.md example-graph.png ; then
          git push origin "HEAD:${{ github.ref }}"
        fi
        echo "::endgroup::"


    - name: Upload release asset
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        RELEASE_ASSET=build/tracing-spec-app.jar
        RELEASE_ASSET_DIR=$(dirname $RELEASE_ASSET)
        mkdir -p "$RELEASE_ASSET_DIR"
        cp tracing-spec-application/build/libs/tracing-spec-application-*-fatjar.jar "$RELEASE_ASSET"

        sudo apt-get -y install gh
        gh config set prompt disabled
        gh release upload --clobber "${GITHUB_REF#refs/tags/}" "$RELEASE_ASSET"


    - name: Remove files that shouldn't be cached
      if: ${{ always() }}
      run: |
        rm -rf $HOME/.gradle/daemon $HOME/.gradle/build-scan-data $HOME/.gradle/kotlin-profile $HOME/.gradle/tmp $HOME/.gradle/workers
        find $HOME/.gradle -name '*.lock' -type f -delete
